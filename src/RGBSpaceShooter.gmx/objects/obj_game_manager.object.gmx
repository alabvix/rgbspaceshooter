<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Counter for respaw player ship
_respaw_count = 0

//_can_create_enemy = true 
_can_create_enemy2 = true 
//_boss_fight = false
//_boss_created = false

SUB_BOSS_MESSAGE = "WARNING: ENEMY SQUAD LEADER IN COMBAT RANGE"

_enemy_type2 = irandom_range(6, 6)

_enemy_index = 0 // the enemy index in the stage enemy array
_enemy_type  = global.STAGE_ENEMIES[global.selected_planet,_enemy_index] //irandom_range(2, 5)

// counter for create an enemy
_counter_create_enemy = 0
_counter_create_sec_enemy = 0
_counter_create_cargo_ships = 0
_counter_create_ammo = 0
_counter_show_boss_warning = 0
_counter_boss_fighting = 0
_show_boss_warning_msg = false
_counter_for_boss = false

// ANIMATIONS FOR GAME_STATE_SUB_BOSS_DEFEATED
//_player_ship_centralized = false
_planet_moved = false
_player_ship_landed = false
//_player_ship_has_moved = false
_planet = 0
//---------


// nb_show_planet = false
//_counter_enter_planet_flag = true
//_counter_enter_planet = 0
//_counter_for_landing = 0



// counter for firs wave
_wave_counter = true
_first_wave_counter = 0

_total_monster_killed   = 0
_total_monsters_created = 0

_total_monster_2_killed   = 0
_total_monsters_2_created = 0

_total_ship_1_created   = 0
_total_ship_1_destroyed = 0

_total_ship_2_created   = 0
_total_ship_2_destroyed = 0

_total_ship_3_created   = 0
_total_ship_3_destroyed = 0

_total_ship_4_created   = 0
_total_ship_4_destroyed = 0

_total_ship_5_created   = 0
_total_ship_5_destroyed = 0

_total_bomb_created     = 0
_total_bomb_destroyed   = 0

_total_meteor_created = 0
_total_meteor_destroyed = 0

_total_alien_created = 0
_total_alien_destroyed = 0

_total_sub_boss_created = 0
_total_sub_boss_destroyed = 0

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
// counts to respaw player ship 
if (global.game_state == global.GAME_STATE_SHIP_DESTROYED) {
    _respaw_count += 1
    if (_respaw_count == 150) {
        // End of game
        global.player_lives --
        if (global.player_lives &lt; 0) {
            global.player_lives = 0
            SetGameState(global.GAME_STATE_GAME_OVER)
            _respaw_count = 0
            exit
        }
        // Next player life
        _respaw_count = 0
        global.player_weapon = global.PLAYER_SINGLE_LASER
        room_restart();
        SetGameState(global.GAME_STATE_PLAY)
    }
}

if (global.game_state == global.GAME_STATE_PLAY) {

    // Count time for lauch first wave
    if (_wave_counter) {
        _first_wave_counter += 1
        show_debug_message(string(_first_wave_counter ))
        if ( _first_wave_counter &lt;= 100) {
            exit
        } else {
            _wave_counter = false
            _first_wave_counter = 0
        }
    }
    var isBoss = CreateRegularEnemies()
    if (isBoss) {
        SetGameState(global.GAME_STATE_PREPARE_BOSS_FIGHT)
    } else {
        CreateSecondaryEnemies()
        CreateCargoShips()
        CreateAmmo()
    }
    
   
}

if (global.game_state == global.GAME_STATE_PREPARE_BOSS_FIGHT) {
    if ( ! _show_boss_warning_msg) {
        _counter_show_boss_warning ++    
        show_debug_message("couter boss message:" + string(_counter_show_boss_warning))
    }
    if (_counter_show_boss_warning == 160 &amp;&amp; ! _counter_for_boss) {
        _show_boss_warning_msg = true
        _counter_show_boss_warning = 0
        _counter_for_boss = true
    }
    if (_counter_for_boss) {
        _counter_boss_fighting ++
        show_debug_message("couter boss fight:" + string(_counter_boss_fighting))
    }
    if (_counter_boss_fighting == 140) {
        _show_boss_warning_msg = false
        _counter_for_boss = false
        SetGameState(global.GAME_STATE_BOSS_FIGHT)
        _counter_boss_fighting = 0
        _counter_for_boss = 0
        CreateBoss()
    }
}

if (global.game_state == global.GAME_STATE_BOSS_FIGHT) {
    CreateAmmo()
}

if (global.game_state == global.GAME_STATE_SUB_BOSS_DEFEATED) {
    // Moves the planet    
    if (! _planet_moved) {
        if (_planet == 0) {
            _planet = GetPlanetForEnter()
        }
        _planet.y += 1  
        _planet.image_xscale += 0.01
        _planet.image_yscale += 0.01
        if (_planet.y == 200) {
            _planet_moved = true   
           show_debug_message("planet moved and preparaed")
        }
    }
    // Move the player ship into the planet
    if (_planet_moved) {
        MoveShipToPlanet()
        obj_player_ship.image_xscale -= 0.01;
        obj_player_ship.image_yscale -= 0.01;
        show_debug_message("ship y :" + string(obj_player_ship.y))
        if (obj_player_ship.image_xscale == 0.00) {
           _player_ship_landed = true
        }
    }
    // Player ship landed on planet. Move to next stage
    if (_player_ship_landed) {
        instance_destroy(_planet)
        SetGameState(global.GAME_STATE_PLAY)
        _planet_moved = false
        _player_ship_landed = false
        MoveToNextStage()
        exit
    }
 
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_halign(fa_center);
draw_set_valign(fa_middle);

var centro_room_x = room_width/2;
var centro_room_y = room_height/2;

// Game Over
if (global.game_state == global.GAME_STATE_GAME_OVER) {
    window_set_cursor(cr_default)
    draw_set_color(c_aqua);
    draw_set_font( font_40 );
    draw_text_transformed(centro_room_x, centro_room_y-100, "GAME OVER",1,1,0 );
    instance_create(centro_room_x,  centro_room_y + 50, obj_frame_medium)
    instance_create(centro_room_x - 100,  centro_room_y + 40, obj_btn_game_over_continue)
    instance_create(centro_room_x + 50,   centro_room_y + 40, obj_btn_game_over_main_menu)
}

if (global.game_state == global.GAME_STATE_PREPARE_BOSS_FIGHT) {
    if (_show_boss_warning_msg) {
        draw_set_color(c_red);
        draw_set_font( font_20 );
        draw_text_transformed(centro_room_x-1,centro_room_y , SUB_BOSS_MESSAGE,1,1,0 );
    }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
