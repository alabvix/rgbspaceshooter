<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>obj_game_hud</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_halign(fa_center);
draw_set_valign(fa_middle);

var centro_room_x = room_width/2;
var centro_room_y = room_height/2;

// Score border
draw_set_color(c_black);
draw_set_font( font_20 );
score_show = string_format(obj_player_ship._score, 7,0);
score_show = string_replace_all(score_show,' ', 0);
draw_text_transformed(centro_room_x-1, 26, score_show,1,1,0 );

// score
draw_set_color(c_white);
draw_set_font( font_20 );
score_show = string_format(obj_player_ship._score, 7,0);
score_show = string_replace_all(score_show,' ', 0);
draw_text_transformed(centro_room_x, 27, score_show,1,1,0 );

// Player Ship hull bar
hull_value = (obj_player_ship._hull / obj_player_ship._hull_max) * 100;
draw_healthbar(220,20,420,35, hull_value, c_dkgray, c_dkgray, c_lime, 0, true, true); 

// Player Ship power bar
value = (obj_player_ship._rainbow_energy / obj_player_ship._rainbow_energy_max) * 100;
draw_healthbar(610,20,810,35, value, c_dkgray, c_dkgray, c_yellow, 0, true, true); 

// Total ammo
draw_set_font( font_10 );
draw_text_transformed(28,  50, obj_player_ship._red_ammo,1,1,0 );
draw_text_transformed(80,  50, obj_player_ship._green_ammo,1,1,0 );
draw_text_transformed(133, 50, obj_player_ship._blue_ammo,1,1,0 );
draw_text_transformed(183, 50, obj_player_ship._rainbow_energy,1,1,0 );

// Destination planet
switch (global.selected_planet) {
    case 1:
        draw_text_transformed(510,  50, "Destination: Aurora",1,1,0 );        
}

// lives
draw_set_font( font_12 );
draw_text_transformed(995, 25, "x" + string(global.player_lives),1,1,0 )

// Boss life
if (global.game_state == global.GAME_STATE_BOSS_FIGHT) {
    switch (global.game_stage) {
        case 1:
            hp = (obj_sub_boss_1._hp_current / obj_sub_boss_1._hp_max) * 100;
            draw_healthbar(300,80,700,93, hp, c_dkgray, c_dkgray, c_orange, 0, true, true); 
            draw_set_font( font_10 );
            draw_set_color(c_white);
            draw_text_transformed(500, 105, obj_sub_boss_1._name,1,1,0 )
            break
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
