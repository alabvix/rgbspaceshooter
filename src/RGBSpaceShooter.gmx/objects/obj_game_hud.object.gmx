<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>obj_game_hud</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_halign(fa_center);
draw_set_valign(fa_middle);

var centro_room_x = room_width/2;
var centro_room_y = room_height/2;

// Score border
draw_set_color(c_black);
draw_set_font( font_20 );
score_show = string_format(global.player_score, 7,0);
score_show = string_replace_all(score_show,' ', 0);
draw_text_transformed(centro_room_x-1, 26, score_show,1,1,0 );

// score
draw_set_color(c_white);
draw_set_font( font_20 );
score_show = string_format(global.player_score, 7,0);
score_show = string_replace_all(score_show,' ', 0);
draw_text_transformed(centro_room_x, 27, score_show,1,1,0 );

// Player Ship hull bar
hull_value = (global.player_hull / global.player_hull_max) * 100;
draw_healthbar(220,20,420,35, hull_value, c_dkgray, c_dkgray, c_lime, 0, true, true); 

// Player Ship Force Shield
shield_value = (global.player_shield / global.player_shield_max) * 100;
draw_healthbar(600,20,800,35, shield_value, c_dkgray, c_dkgray, c_lime, 0, true, true); 

// Energy icons
draw_set_font( font_10 );
var red_energy = string(global.player_red_energy) + "/" + string(global.player_red_energy_base)
var green_energy = string(global.player_green_energy) + "/" + string(global.player_green_energy_base)
var blue_energy = string(global.player_blue_energy) + "/" + string(global.player_blue_energy_base)
var rgb_energy = string(global.player_rgb_energy) + "/" + string(global.player_rgb_energy_base)

draw_text_transformed(58, 21, red_energy, 1,1,0 );
draw_text_transformed(58, 54, green_energy, 1,1,0 );
draw_text_transformed(163, 21, blue_energy, 1,1,0 );
draw_text_transformed(163, 54, rgb_energy, 1,1,0 );

// Destination planet
switch (global.selected_planet) {
    case global.PLANET_AURORA_SPACE:
        draw_text_transformed(510,  50, "Destination: Aurora",1,1,0 );        
        break
   case global.PLANET_SPACE_LAB:
        draw_text_transformed(510,  50, "Destination: Space Lab",1,1,0 );        
        break
}

// current weapon
var weapon_name = ""
switch (global.player_weapon) {
    case global.PLAYER_SINGLE_LASER:
        weapon_name = "Single Laser"
        break;
    case global.PLAYER_DOUBLE_LASER:
        weapon_name = "Double Laser"
        break;
    case global.PLAYER_TRI_LASER:
        weapon_name = "Tri Laser"
        break;
    case global.PLAYER_PURSUIT_LASER:
        weapon_name = "Pursuit Laser"
        break;
}
draw_text_transformed(870, 30, weapon_name,1,1,0 )

// lives
draw_set_font( font_12 );
draw_text_transformed(995, 25, "x" + string(global.player_lives),1,1,0 )

// Boss life
if (global.game_state == global.GAME_STATE_BOSS_FIGHT) {
    switch (global.selected_planet) {
        case global.PLANET_AURORA_SPACE:
            if (! instance_exists(obj_sub_boss_1)) {
                exit
            }
            hp = (obj_sub_boss_1._hp_current / obj_sub_boss_1._hp_max) * 100;
            draw_healthbar(300,80,700,93, hp, c_dkgray, c_dkgray, c_orange, 0, true, true); 
            draw_set_font( font_10 );
            draw_set_color(c_white);
            draw_text_transformed(500, 105, obj_sub_boss_1._name,1,1,0 )
            break
        case global.PLANET_AURORA_LAND:
            if (! instance_exists(obj_boss_1)) {
                exit
            }
            hp = (obj_boss_1._hp_current / obj_boss_1._hp_max) * 100;
            draw_healthbar(300,80,700,93, hp, c_dkgray, c_dkgray, c_orange, 0, true, true); 
            draw_set_font( font_10 );
            draw_set_color(c_white);
            draw_text_transformed(500, 105, obj_boss_1._name,1,1,0 )
            break  
        case global.PLANET_SPACE_LAB:
            if (! instance_exists(obj_sub_boss_space_lab)) {
                exit
            }
            hp = (obj_sub_boss_space_lab._hp_current / obj_sub_boss_space_lab._hp_max) * 100;
            draw_healthbar(300,80,700,93, hp, c_dkgray, c_dkgray, c_orange, 0, true, true); 
            draw_set_font( font_10 );
            draw_set_color(c_white);
            draw_text_transformed(500, 105, obj_sub_boss_space_lab._name,1,1,0 )
            break          
        case global.PLANET_SPACE_LAB_LAND:
            if (! instance_exists(obj_boss_space_lab_mastermind)) {
                exit
            }
            hp = (obj_boss_space_lab_mastermind._hp_current / obj_boss_space_lab_mastermind._hp_max) * 100;
            draw_healthbar(350, 40, 660, 55, hp, c_dkgray, c_dkgray, c_orange, 0, true, true); 
            draw_set_font( font_10 );
            draw_set_color(c_white);
            draw_text_transformed(500, 62, obj_boss_space_lab_mastermind._name,1,1,0 )
            break                      
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
