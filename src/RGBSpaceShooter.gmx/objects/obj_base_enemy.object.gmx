<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spt_base_obj</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// This instance variables can be used in the child instances

_speed_y       = 0 // Sprite speed y axis
_shoot_counter = 0 // Counter for shoot. 
_shoot_in      = 0 // The counter number to shoot. Controlled in child instances
_weapon_type   = 1 // Type of weapon used by the enemy

_points        = 0 // scored points of the enemy
_hp            = 0 // Health points
_type          = 0 // ship_1, ship_2, monster, etc...

_is_cargo_ship = false
_is_ship_6     = false
_color         = 0
_is_monster    = false

_shadow = 0

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
// Points the sprite image to the object direction.
image_angle = direction

// Moves the sprite in Y axis.
y += _speed_y * (delta_time / 100000);// move 100 pixels

// Creates shadowns for phase in planets lands
if (global.selected_planet == global.PLANET_AURORA_LAND) {
    if (_shadow == 0) {
        if (_is_cargo_ship) {
            _shadow = instance_create(x + 40, y+ 40, obj_shadow_carg_ship)            
        }
        if (_is_ship_6) {
            _shadow = instance_create(x + 30, y -30, obj_shadow_ship_6)           
        }
    }
}

if (_shadow != 0) {
    _shadow.x = x + 40
    _shadow.y = y + 40
}

// Shoot control
if (_shoot_in != 0 &amp;&amp; global.game_state == global.GAME_STATE_PLAY)
{
    _shoot_counter += 1 * (delta_time / 100000);
    //show_debug_message("Enemy red 1 shoot count:" +string(_shoot_counter));
    if ( round(_shoot_counter) == _shoot_in) {
        switch (_weapon_type) 
        {
            case global.WEAPON_ENERGY_BALL:    
                instance_create(x, y, obj_enemy_weapon_1)
                break
            case global.WEAPON_ENERGY_BALL_V:    
                instance_create(x, y, obj_enemy_weapon_6)
                break    
            case global.WEAPON_ENERGY_BALL_SPIN:    
                instance_create(x, y, obj_enemy_weapon_2)
                break
            case global.WEAPON_ENERGY_BALL_STAR:
                for (i=0; i &lt; global.dir_array_lenght; i++) {
                    sphere = instance_create(x, y, obj_enemy_weapon_3)
                    sphere.speed = 7
                    sphere.direction = global.dir_array[i]
                }
                break;         
        }
        _shoot_counter = 0
    }
}    

// Ship 4 moves towards the player ship
if (_type == global.ENEMY_SHIP_4) {
    if ( instance_exists(obj_player_ship)) {
        if (global.game_state == global.GAME_STATE_PLAY) {
            move_towards_point( obj_player_ship.x, obj_player_ship.y, _speed_y );
            image_angle = point_direction(x, y, obj_player_ship.x, obj_player_ship.y);
        }
    }
}
    





</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
