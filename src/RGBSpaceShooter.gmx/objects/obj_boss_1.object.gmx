<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spt_boss_1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_boss_base</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()
_name  = global.BOSS_1_NAME
_points = 500

_hp_max = global.BOSS_1_HP_MAX
_hp_current = _hp_max
_speed = 5
image_speed = 0.3

CENTER = 0
LEFT = 1
RIGHT = 2

_position_index = 0
_positions[0] = CENTER
_positions[1] = LEFT
_positions[2] = CENTER
_positions[3] = RIGHT

_center_x = x

_move_forward = true
_move_to_center = false
_move_to_left = false
_move_to_right = false

_counter_running = false
_counter_to_move = 0

_LIMIT_ENERGY_ABSORVER = 200
_counter_to_energy_absorver = 0

_count_to_attack_1 = 0
_LIMIT_ATTACK_1 = 40
_start_attack_1 = false

_count_to_attack_2 = 0
_LIMIT_ATTACK_2 = 40

_start_attack_2 = false

_observer_flag = false





</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()

delta = (60/1000000) * delta_time;

// move forward and stop in the center of the screen
if (_move_forward) {
    y += _speed * delta;
    if (y &gt; 220) {
        _move_forward = false
        _counter_running = true
        CreateOrbitObject(obj_red_energy_absorver,  self, 3, 0, x, y) 
        CreateOrbitObject(obj_green_energy_absorver,self, 3, 60,  x, y) 
        CreateOrbitObject(obj_blue_energy_absorver, self, 3, 120, x, y) 
        CreateOrbitObject(obj_red_energy_absorver,  self, 3, 180, x, y) 
        CreateOrbitObject(obj_green_energy_absorver,self, 3, 240, x, y) 
        CreateOrbitObject(obj_blue_energy_absorver, self, 3, 300, x, y) 
        _start_attack_1 = true
    }
}

if (_counter_running) {
    _counter_to_move ++
    if (_counter_to_move == 100) {
        _start_attack_1 = false
    
        // get next position to move
        _position_index ++
        if (_position_index &gt; array_length_1d(_positions) - 1) {
            _position_index = 0
        }  
        var position_to_move = _positions[_position_index]
        _move_to_center = (position_to_move == CENTER)
        _move_to_left = (position_to_move == LEFT)
        _move_to_right = (position_to_move == RIGHT)
        
        _counter_running = false
        _counter_to_move = 0
    }
}

// Go left
if (_move_to_left &amp;&amp; ! _counter_running) {
    x -= _speed * delta;
    if (x &lt; 200) {
        _move_to_left = false
        _counter_running = true
    }
}

// Go center
if (_move_to_center &amp;&amp; ! _counter_running) {
    if (x &gt; _center_x) {
        x -= _speed * delta;
        if (x &lt;= _center_x) {
            x = _center_x
            _move_to_center = false
            _counter_running = true
        }
    } else {
        x += _speed * delta;
        if (x &gt;= _center_x) {
            x = _center_x
            _move_to_center = false
            _counter_running = true
        }
    }
    _start_attack_1 = true
}

// Go Right
if (_move_to_right &amp;&amp; ! _counter_running) {
    _start_attack_1 = false
    x += _speed * delta;
    if (x &gt; 900) {
        _move_to_right = false
        _counter_running = true
    }
}

/*
if (! instance_exists(obj_base_energy_absorver)) {
    _counter_to_energy_absorver ++
    _start_attack_1 = false
    show_debug_message(_counter_to_energy_absorver)
}
*/

/*
if (_counter_to_energy_absorver == _LIMIT_ENERGY_ABSORVER) {
   show_debug_message("creating energy absorvers")
   instance_create(x, y + 200, obj_red_energy_absorver)
   
   var pos_x_1 = x - 150
   var pos_x_2 = x + 150
   
   if (_observer_flag) {
       instance_create(pos_x_1, y + 200, obj_green_energy_absorver)
       instance_create(pos_x_2, y + 200, obj_blue_energy_absorver)
       _observer_flag = false
   } else {
       instance_create(pos_x_2, y + 200, obj_green_energy_absorver)
       instance_create(pos_x_1, y + 200, obj_blue_energy_absorver)
       _observer_flag = true
   }

   _start_attack_1 = true
   _counter_to_energy_absorver = 0
} 

if (instance_exists(obj_red_energy_absorver)) {
    obj_red_energy_absorver.x = x
    obj_red_energy_absorver.y = y + 200
}

if (instance_exists(obj_green_energy_absorver)) {
    obj_green_energy_absorver.x = x - 150
    obj_green_energy_absorver.y = y + 200
}

if (instance_exists(obj_blue_energy_absorver)) {
   obj_blue_energy_absorver.x = x + 150
   obj_blue_energy_absorver.y = y + 200
}*/

if (_start_attack_1) {
    _count_to_attack_1 ++
    if (_count_to_attack_1 == _LIMIT_ATTACK_1) {
        CreateEnemyEnergyBallStar()
        _count_to_attack_1 = 0
    }
}

 

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
